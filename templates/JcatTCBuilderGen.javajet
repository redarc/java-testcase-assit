<%@ jet 
   package="jcat.testcase.gen" 
   class="JcatTCBuilderGen"
   imports=""
%>
<%
	JcatTCGenArgs args = (JcatTCGenArgs)argument;
    String pkgName = args.getPkgName();
    String className = args.getClassName(); 
    String moduleName=args.getModuleName();
%>
package <%=pkgName%>;

/**
*   
* @name <%=className%>
*       
* @author 
*       
* @created 
*       
* @description   A builder class for {@link <%=moduleName%>}. The setter methods can
*               optionally be used to configure the test module. Call build to get an instance of
*               {@link <%=moduleName%>}.
*       
* @revision   
*  
*/

public class <%=className%>
{
    private String testId = null;
    private String servingEUtranCell = null;

    /**
     * The constructor for this builder, should only be used by {@link <%=className%>} 
     * 
     */
    protected <%=className%>(){}
    
     /**
     * @param testId
     *            Any string that is a unique identifier for the test
     * @return
     */
    public <%=className%> setTestId(String testId) {
        if (testId == null)
            throw new NullPointerException(errorMessage("testId"));
        this.testId = testId;
        return this;
    }

    public String getTestId(){
        return testId;
    }

     /**
      * @param servingEUtranCell
      *           number of cells be used Throughput
      * @return
      */
     public <%=className%> setNumOfCells(String servingEUtranCell) {
         if(Integer.parseInt(servingEUtranCell) <= 0 ) {
             String errorMessage = String.format("servingEUtranCell ID can not be smaller than 0");
             throw new IllegalArgumentException(errorMessage);
         }
         this.servingEUtranCell = servingEUtranCell;
         return this;
     }

     public String getServingEUtranCell()
     {
         return servingEUtranCell;
     }
     
     private String errorMessage(String argName) {
        return String.format("Null argument or error argument: '%s'", argName);
     }
     
     public <%=moduleName%> build(){
        return new <%=moduleName%>(this);
     }
}
